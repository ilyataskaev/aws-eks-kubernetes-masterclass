name: EKS Deploy
run-name: EKS ${{ inputs.action }} ${{ inputs.cluster_name }}

on:
  workflow_dispatch:
     inputs:
      action:
        description: 'Action to choose for EKS Cluster'
        required: true
        default: 'create'
        type: choice
        options:
          - create
          - destroy
      cluster_name:
        description: 'Name of the cluster'
        required: true
        default: 'eks-2023'
env:
  region: 'eu-north-1'
  cluster_name: 'eks-2023'
  version: '1.27'
  vpc-cidr: '10.0.0.0/16'

jobs:

  eks-create:
    if: ${{ inputs.action == 'create' }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.region }}

      - name: Install eksctl
        run: |
          ARCH=amd64
          PLATFORM=$(uname -s)_$ARCH
          curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
          tar -xzf eksctl_$PLATFORM.tar.gz && rm eksctl_$PLATFORM.tar.gz
          chmod +x eksctl

      - name: Create EKS cluster
        run: |
          ./eksctl create cluster \
              --name ${{ inputs.cluster_name }} \
              --region ${{ env.region }} \
              --version ${{ env.version }} \
              --zones ${{ env.region }}a,${{ env.region }}b \
              --vpc-cidr ${{ env.vpc-cidr }} \
              --without-nodegroup

      - name: Associate IAM OIDC Provider
        run: |
          ./eksctl utils associate-iam-oidc-provider \
              --region  ${{ env.region }} \
              --cluster ${{ inputs.cluster_name }} \
              --approve

      - name: Create Node Group
        run: |
          ./eksctl create nodegroup --cluster=${{ inputs.cluster_name }} \
              --region=${{ env.region }} \
              --name=${{ inputs.cluster_name }}-ng-public1 \
              --node-type=t3.medium \
              --nodes=2 \
              --nodes-min=2 \
              --nodes-max=4 \
              --node-volume-size=20 \
              --ssh-access \
              --ssh-public-key=eks \
              --managed \
              --asg-access \
              --external-dns-access \
              --full-ecr-access \
              --appmesh-access \
              --alb-ingress-access

  eks-destroy:
    if: ${{ inputs.action == 'destroy' }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.region }}

      - name: Install eksctl
        run: |
          ARCH=amd64
          PLATFORM=$(uname -s)_$ARCH
          curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
          tar -xzf eksctl_$PLATFORM.tar.gz && rm eksctl_$PLATFORM.tar.gz
          chmod +x eksctl

      - name: Delete NodeGroup
        run: |
          ./eksctl delete nodegroup --region=${{ env.region }} --cluster=${{ inputs.cluster_name }} --name='ng-f24d73a7'
          ./eksctl delete nodegroup --region=${{ env.region }} --cluster=${{ inputs.cluster_name }} --name=${{ inputs.cluster_name }}-ng-public1

      - name: Delete Cluster
        run: ./eksctl delete cluster --region=${{ env.region }} --name=${{ inputs.cluster_name }}
